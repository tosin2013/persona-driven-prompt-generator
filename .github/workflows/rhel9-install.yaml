name: Setup AWS VM and Install Requirements

on:
  workflow_dispatch:

jobs:
  setup-vm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Launch EC2 instance
        id: ec2
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ${{ secrets.RHEL_AMI }} \
            --count 1 \
            --instance-type m6i.xlarge \
            --key-name githubkey \
            --subnet-id ${{ secrets.SUBNET_ID }} \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=persona_rhel9.4}]' \
            --associate-public-ip-address \
            --query 'Instances[0].InstanceId' \
            --output text)
          echo "instance_id=$INSTANCE_ID" >> $GITHUB_OUTPUT

      - name: Wait for EC2 instance to be running
        run: |
          aws ec2 wait instance-running --instance-ids ${{ steps.ec2.outputs.instance_id }}

      - name: Get EC2 instance public DNS
        id: ec2-dns
        run: |
          for i in {1..10}; do
            INSTANCE_DNS=$(aws ec2 describe-instances \
              --instance-ids ${{ steps.ec2.outputs.instance_id }} \
              --query 'Reservations[0].Instances[0].PublicDnsName' \
              --output text)
            if [ -n "$INSTANCE_DNS" ]; then
              echo "instance_dns=$INSTANCE_DNS" >> $GITHUB_OUTPUT
              break
            fi
            echo "Retrying to get instance DNS... ($i/10)"
            sleep 10
          done
          if [ -z "$INSTANCE_DNS" ]; then
            echo "Failed to retrieve instance DNS."
            exit 1
          fi

      - name: Download SSH key
        run: |
          echo "${{ secrets.SSH_KEY }}" > githubkey.pem
          chmod 600 githubkey.pem

      - name: Install requirements on EC2 instance
        run: |
          ssh -tt -o StrictHostKeyChecking=no -i githubkey.pem ec2-user@${{ steps.ec2-dns.outputs.instance_dns }} << 'EOF'
            sudo yum update -y
            sudo yum install -y python3-pip git
            git clone https://github.com/tosin2013/persona-driven-prompt-generator.git
            cd persona-driven-prompt-generator
            pip3 install -r requirements.txt
            bash setup_database.sh -i
            curl -fsSL https://ollama.com/install.sh | sh
            export LITELLM_MODEL="ollama/llama2"
            export LITELLM_PROVIDER="ollama"
            export LITELLM_API_BASE="http://localhost:11434"
            export OLLAMA_API_KEY="your-ollama-api-key"
            ollama pull ${LITELLM_MODEL}
            streamlit run persona_testing.py
          EOF
